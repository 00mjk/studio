def artifactVersion() {
    def data = readFile('version')
    def major = data.findAll($/(?m)^STUDIO_MAJOR_VERSION=(\d+)/$).first().split('=').last()
    def minor = data.findAll($/(?m)^STUDIO_MINOR_VERSION=(\d+)/$).first().split('=').last()
    def patch = data.findAll($/(?m)^STUDIO_PATCH_LEVEL=(\d+)/$).first().split('=').last()
    return major + "." + minor + "." + patch
}

def isDebugBuildAllowed() {
    return env.BRANCH_NAME == 'develop'        ||
           env.TAG_NAME ==~ /v\d+\.\d+\.\d+.*/
}

pipeline {
    agent none

    options {
        parallelsAlwaysFailFast()
        disableConcurrentBuilds()
    }

    stages {
        stage('Build') {
            parallel {
                stage ('windowsX64') {
                    agent { label 'windowsX64' }
                    when {
                        expression { return isDebugBuildAllowed() }
                    }
                    steps {
                        step([$class: 'WsCleanup'])
                        checkout scm
                        bat '''
                            @echo off
                            echo Setting up environment for VS2017 usage...
                            cd "C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Community\\VC\\Auxiliary\\Build"
                            call vcvars64.bat
                            cd %WORKSPACE%
                            qmake gams-studio.pro "CONFIG+=debug QMAKE_CXXFLAGS_DEBUG += /MP"
                            nmake
                        '''
                    }
                }
            }
        }
        stage('Pack') {
            parallel {
                stage ('windowsX64') {
                    agent { label 'windowsX64' }
                    when {
                        expression { return isDebugBuildAllowed() }
                    }
                    steps {
                        bat '''
                            windeployqt --debug --compiler-runtime --pdb --force src\\bin\\studio.exe

                            copy CHANGELOG "src\\bin\\resources\\Changelog"
                            copy "C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Community\\VC\\Redist\\MSVC\\14.16.27012\\x64\\Microsoft.VC141.CRT\\*" "src\\bin"
                            copy "C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Community\\VC\\Redist\\MSVC\\14.16.27012\\vc_redist.x64.exe" "src\\bin"
                        '''
                        fileOperations([folderCreateOperation('tmp/studio'), folderCopyOperation(destinationFolderPath: 'tmp/studio', sourceFolderPath: 'src/bin')])
                    }
                }
            }
        }
        stage('Archive') {
            parallel {
                stage('windowsX64') {
                    agent { label 'windowsX64' }
                    when {
                        expression { return isDebugBuildAllowed() }
                    }
                    steps {
                        script {
                            def versionData = artifactVersion()
                            zip zipFile: "${env.BRANCH_NAME}-studio-${versionData}-x86_64.zip", archive: true, dir: 'tmp'
                        }
                    }
                }
            }
        }
        stage('ReadMe') {
            parallel {
                stage('linux') {
                    agent { label 'master'}
                    steps {
                        sh '''
                            echo "Linux debug builds are not available, but might be added in future."
                        '''
                    }
                }
                stage('windowsX64') {
                    agent { label 'windowsX64' }
                    steps {
                        bat '''
                            echo "Windows debug builds are availabel for branch develop and release tags only, e.g 1.4.0 or 1.5.0-rc."
                        '''
                    }
                }
                stage('macos') {
                    agent { label 'macos' }
                    steps {
                        sh '''
                            echo "macOS debug builds are not available, but might be added in future."
                        '''
                    }
                }
            }
        }
    }
}
